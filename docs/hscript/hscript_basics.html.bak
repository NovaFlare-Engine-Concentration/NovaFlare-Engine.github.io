<html lang="zh">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>HScript 基础语法 | NovaFlare Engine</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700;800&family=Noto+Sans+SC:wght@400;500;700&display=swap" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/prism/1.29.0/themes/prism-tomorrow.min.css" rel="stylesheet">
    <style>
        :root {
            --bg-primary: #1a1a2e;
            --bg-secondary: #16213e;
            --bg-card: #0f3460;
            --accent-color: #e94560;
            --text-primary: #ffffff;
            --text-secondary: #b8b8b8;
            --border-color: #2a2a4a;
            --font-main: 'Inter', 'Noto Sans SC', sans-serif;
        }

        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: var(--font-main);
            background-color: var(--bg-primary);
            color: var(--text-primary);
            line-height: 1.6;
            overflow-x: hidden;
            min-height: 100vh;
        }

        .container {
            max-width: 1000px;
            margin: 0 auto;
            padding: 20px;
        }

        .header {
            text-align: center;
            padding: 30px 0;
            margin-bottom: 30px;
        }

        .page-title {
            font-size: 2.2rem;
            margin-bottom: 10px;
            color: var(--accent-color);
        }

        .page-subtitle {
            color: var(--text-secondary);
            font-size: 1.1rem;
        }

        .doc-section {
            background: var(--bg-card);
            border-radius: 8px;
            padding: 25px;
            margin-bottom: 30px;
            border: 1px solid var(--border-color);
        }
        
        .doc-section h2 {
            color: var(--accent-color);
            margin-bottom: 15px;
            font-size: 1.5rem;
            border-bottom: 2px solid var(--accent-color);
            padding-bottom: 8px;
        }
        
        .doc-section h3 {
            color: var(--text-primary);
            margin: 20px 0 12px;
            font-size: 1.3rem;
        }
        
        .function-name {
            background: var(--accent-color);
            color: white;
            padding: 5px 10px;
            border-radius: 4px;
            font-family: monospace;
            font-size: 1rem;
            display: inline-block;
            margin-bottom: 12px;
        }
        
        .function-explanation, .function-notes {
            margin: 12px 0;
            line-height: 1.6;
            font-size: 0.95rem;
        }
        
        .function-notes {
            background: rgba(255, 193, 7, 0.1);
            border-left: 4px solid #ffc107;
            padding: 12px;
            border-radius: 4px;
        }
        
        .code-block {
            margin: 15px 0;
            border-radius: 6px;
            overflow: hidden;
            font-size: 0.9rem;
        }
        
        .code-header {
            background: #2d2d2d;
            color: #ccc;
            padding: 8px 12px;
            font-family: monospace;
            font-size: 0.85rem;
            display: flex;
            justify-content: space-between;
            align-items: center;
        }
        
        .code-copy {
            background: none;
            border: none;
            color: #ccc;
            cursor: pointer;
            font-size: 0.8rem;
            padding: 4px 8px;
            border-radius: 4px;
            transition: background 0.2s;
        }
        
        .code-copy:hover {
            background: rgba(255, 255, 255, 0.1);
        }
        
        pre[class*="language-"] {
            margin: 0;
            border-radius: 0;
            font-size: 0.85rem;
        }
        
        .back-link {
            display: inline-block;
            margin-top: 20px;
            color: var(--accent-color);
            text-decoration: none;
            font-size: 1rem;
        }
        
        .back-link:hover {
            text-decoration: underline;
        }

        @media (max-width: 768px) {
            .container {
                padding: 15px;
            }
            
            .page-title {
                font-size: 1.8rem;
            }
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="header">
            <h1 class="page-title">HScript 基础语法</h1>
            <p class="page-subtitle">学习 HScript 脚本语言的基本语法和结构</p>
        </div>
        
        <div class="doc-section">
            <h2>变量和数据类型</h2>
            
            <div class="function-explanation">
                <p>HScript 使用动态类型系统，变量无需声明类型。使用 <code>var</code> 关键字声明变量。</p>
            </div>
            
            <div class="code-block">
                <div class="code-header">
                    <span>HScript</span>
                    <button class="code-copy">
                        <i class="fas fa-copy me-1"></i> 复制
                    </button>
                </div>
                <pre><code class="language-javascript">// 变量声明
var playerName = "John";
var playerHealth = 100;
var isAlive = true;
var playerPosition = {x: 100, y: 200};

// 数组
var inventory = ["sword", "potion", "shield"];
var scores = [95, 87, 72, 64];

// 函数
var calculateDamage = function(attack, defense) {
    return attack * 2 - defense;
};</code></pre>
            </div>
        </div>
        
        <div class="doc-section">
            <h2>控制结构</h2>
            
            <div class="function-explanation">
                <p>HScript 支持标准的控制结构，包括条件语句和循环。</p>
            </div>
            
            <div class="code-block">
                <div class="code-header">
                    <span>HScript</span>
                    <button class="code-copy">
                        <i class="fas fa-copy me-1"></i> 复制
                    </button>
                </div>
                <pre><code class="language-javascript">// 条件语句
if (playerHealth > 50) {
    showMessage("健康状态良好");
} else if (playerHealth > 20) {
    showMessage("需要治疗");
} else {
    showMessage("危险！生命值过低");
}

// 循环
for (var i = 0; i < 10; i++) {
    createEnemy(i * 50, 100);
}

// 遍历数组
for (var item in inventory) {
    log("物品: " + item);
}

// while 循环
var counter = 0;
while (counter < 5) {
    spawnPowerUp();
    counter++;
}</code></pre>
            </div>
        </div>
        
        <div class="doc-section">
            <h2>函数定义</h2>
            
            <div class="function-explanation">
                <p>函数是 HScript 中的一等公民，可以赋值给变量、作为参数传递或作为返回值。</p>
            </div>
            
            <div class="code-block">
                <div class="code-header">
                    <span>HScript</span>
                    <button class="code-copy">
                        <i class="fas fa-copy me-1"></i> 复制
                    </button>
                </div>
                <pre><code class="language-javascript">// 函数声明
function createPlayer(x, y, name) {
    var player = {
        x: x,
        y: y,
        name: name,
        health: 100
    };
    
    // 方法
    player.move = function(dx, dy) {
        this.x += dx;
        this.y += dy;
    };
    
    player.takeDamage = function(amount) {
        this.health -= amount;
        if (this.health <= 0) {
            this.die();
        }
    };
    
    player.die = function() {
        log(this.name + " 已死亡");
        removeEntity(this);
    };
    
    return player;
}

// 使用函数
var hero = createPlayer(100, 100, "Hero");
hero.move(10, 5);
hero.takeDamage(30);</code></pre>
            </div>
        </div>
        
        <div class="doc-section">
            <h2>事件处理</h2>
            
            <div class="function-explanation">
                <p>HScript 可以响应游戏中的各种事件，如键盘输入、碰撞检测等。</p>
            </div>
            
            <div class="code-block">
                <div class="code-header">
                    <span>HScript</span>
                    <button class="code-copy">
                        <i class="fas fa-copy me-1"></i> 复制
                    </button>
                </div>
                <pre><code class="language-javascript">// 键盘事件
onKeyPress("SPACE", function() {
    player.jump();
});

onKeyDown("LEFT", function() {
    player.x -= player.speed;
});

onKeyDown("RIGHT", function() {
    player.x += player.speed;
});

// 碰撞事件
onCollision(player, enemy, function() {
    player.takeDamage(10);
    enemy.destroy();
});

// 定时器
setTimeout(function() {
    spawnEnemy();
}, 5000); // 5秒后生成敌人

setInterval(function() {
    updateGameLogic();
}, 16); // 每16毫秒更新游戏逻辑（约60FPS）</code></pre>
            </div>
        </div>
        
        <a href="index.html" class="back-link">
            <i class="fas fa-arrow-left me-1"></i> 返回主页面
        </a>
    </div>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/prism/1.29.0/prism.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/prism/1.29.0/components/prism-javascript.min.js"></script>
    
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const copyButtons = document.querySelectorAll('.code-copy');
            copyButtons.forEach(button => {
                button.addEventListener('click', function() {
                    const codeBlock = this.closest('.code-block').querySelector('code');
                    const textArea = document.createElement('textarea');
                    textArea.value = codeBlock.textContent;
                    document.body.appendChild(textArea);
                    textArea.select();
                    document.execCommand('copy');
                    document.body.removeChild(textArea);
                    
                    // 显示复制成功提示
                    const originalHTML = this.innerHTML;
                    this.innerHTML = '<i class="fas fa-check me-1"></i> 已复制';
                    setTimeout(() => {
                        this.innerHTML = originalHTML;
                    }, 2000);
                });
            });
        });
    </script>
</body>
</html>