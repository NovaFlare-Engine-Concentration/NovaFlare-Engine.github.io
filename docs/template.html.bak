<!DOCTYPE html>
<html lang="zh">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>NovaFlare Engine | HScript 开发文档</title>
    <link rel="stylesheet" href="../../../css/themes.css">
    <link rel="stylesheet" href="../../../css/styles.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700;800&family=Noto+Sans+SC:wght@400;500;700&display=swap" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/prism/1.29.0/themes/prism-tomorrow.min.css" rel="stylesheet">
    <style>
        .docs-container {
            display: flex;
            min-height: calc(100vh - 200px);
            margin-top: 30px;
        }
        
        .sidebar {
            width: 280px;
            background: rgba(var(--bg-card-rgb), 0.9);
            border-radius: 12px;
            padding: 20px;
            margin-right: 30px;
            border: 1px solid var(--border-color);
            height: fit-content;
            position: sticky;
            top: 100px;
        }
        
        .sidebar-section {
            margin-bottom: 20px;
        }
        
        .sidebar-header {
            display: flex;
            align-items: center;
            justify-content: space-between;
            padding: 10px 0;
            cursor: pointer;
            font-weight: 600;
            color: var(--accent-color);
            border-bottom: 1px solid var(--border-color);
        }
        
        .sidebar-header i {
            transition: transform 0.3s ease;
        }
        
        .sidebar-header.active i {
            transform: rotate(90deg);
        }
        
        .sidebar-items {
            padding-left: 15px;
            max-height: 0;
            overflow: hidden;
            transition: max-height 0.3s ease;
        }
        
        .sidebar-section.active .sidebar-items {
            max-height: 500px;
        }
        
        .sidebar-item {
            display: block;
            padding: 8px 10px;
            color: var(--text-secondary);
            text-decoration: none;
            border-radius: 6px;
            margin: 5px 0;
            transition: all 0.2s ease;
            font-size: 0.9rem;
        }
        
        .sidebar-item:hover, .sidebar-item.active {
            background: rgba(var(--accent-rgb), 0.1);
            color: var(--accent-color);
        }
        
        /* 文档内容样式 */
        .docs-content {
            flex: 1;
            background: rgba(var(--bg-card-rgb), 0.9);
            border-radius: 12px;
            padding: 30px;
            border: 1px solid var(--border-color);
        }
        
        .doc-section {
            margin-bottom: 50px;
            display: none;
        }
        
        .doc-section.active {
            display: block;
        }
        
        .doc-section h2 {
            color: var(--accent-color);
            margin-bottom: 20px;
            font-size: 1.8rem;
            border-bottom: 2px solid var(--accent-color);
            padding-bottom: 10px;
        }
        
        .doc-section h3 {
            color: var(--text-primary);
            margin: 25px 0 15px;
            font-size: 1.4rem;
        }
        
        .function-name {
            background: var(--accent-color);
            color: white;
            padding: 6px 12px;
            border-radius: 4px;
            font-family: monospace;
            font-size: 1.1rem;
            display: inline-block;
            margin-bottom: 15px;
        }
        
        .function-explanation, .function-notes {
            margin: 15px 0;
            line-height: 1.6;
        }
        
        .function-notes {
            background: rgba(255, 193, 7, 0.1);
            border-left: 4px solid #ffc107;
            padding: 15px;
            border-radius: 4px;
        }
        
        .function-warning {
            background: rgba(220, 53, 69, 0.1);
            border-left: 4px solid #dc3545;
            padding: 15px;
            border-radius: 4px;
        }
        
        .function-tip {
            background: rgba(13, 110, 253, 0.1);
            border-left: 4px solid #0d6efd;
            padding: 15px;
            border-radius: 4px;
        }
        
        .code-block {
            margin: 20px 0;
            border-radius: 8px;
            overflow: hidden;
        }
        
        .code-header {
            background: #2d2d2d;
            color: #ccc;
            padding: 10px 15px;
            font-family: monospace;
            font-size: 0.9rem;
            display: flex;
            justify-content: space-between;
            align-items: center;
        }
        
        .code-copy {
            background: none;
            border: none;
            color: #ccc;
            cursor: pointer;
            font-size: 0.8rem;
        }
        
        pre[class*="language-"] {
            margin: 0;
            border-radius: 0;
        }
        
        /* 导航按钮 */
        .doc-navigation {
            display: flex;
            justify-content: space-between;
            margin-top: 40px;
            padding-top: 20px;
            border-top: 1px solid var(--border-color);
        }
        
        .nav-btn {
            display: flex;
            align-items: center;
            gap: 8px;
            padding: 10px 20px;
            background: var(--accent-color);
            color: white;
            border: none;
            border-radius: 6px;
            cursor: pointer;
            transition: all 0.2s ease;
            text-decoration: none;
            font-weight: 500;
        }
        
        .nav-btn:hover {
            background: var(--accent-hover);
            transform: translateY(-2px);
            box-shadow: 0 4px 8px rgba(0,0,0,0.1);
        }
        
        .nav-btn.prev {
            background: var(--text-secondary);
        }
        
        .nav-btn.prev:hover {
            background: var(--text-primary);
        }
        
        /* 响应式设计 */
        @media (max-width: 768px) {
            .docs-container {
                flex-direction: column;
            }
            
            .sidebar {
                width: 100%;
                margin-right: 0;
                margin-bottom: 20px;
                position: static;
            }
            
            .doc-navigation {
                flex-direction: column;
                gap: 15px;
            }
            
            .nav-btn {
                justify-content: center;
            }
        }
    </style>
</head>
<body>
    <canvas id="starfield"></canvas>

    <nav class="navbar">
        <div class="container navbar-container">
            <div class="navbar-logo">
                <h1>新星闪耀引擎</h1>
            </div>
            <div class="navbar-menu">
                <div class="navbar-actions">
                    <button id="theme-toggle" aria-label="切换主题">
                        <i class="fas fa-moon"></i>
                    </button>
                    <a href="../../en/hscript/hscript_readme.html" class="lang-toggle" aria-label="切换到英文">
                        <span>EN</span>
                    </a>
                </div>
                <button class="mobile-menu-btn" id="menu-toggle" aria-label="菜单">
                    <i class="fas fa-bars"></i>
                </button>
            </div>
        </div>
    </nav>

    <main class="docs-main">
        <div class="container">
            <div class="docs-container">
                <aside class="sidebar">
                    <!-- 侧边栏将由JavaScript生成 -->
                </aside>

                <!-- 文档内容区域 -->
                <div class="docs-content">
                    <!-- 文档抽屉块将在这里动态生成 -->
                </div>
            </div>
        </div>
    </main>

    <footer class="footer">
        <div class="container">
            <div class="footer-content">
                <p>NovaFlare Engine 开发文档</p>
            </div>
            <ul class="footer-links">
                <li><a href="../../../index.html">首页</a></li>
                <li><a href="../../../docs-choose.html">文档</a></li>
                <li><a href="../../../index.html#download">下载</a></li>
                <li><a href="../../../index.html#community">社区</a></li>
            </ul>
            <div class="footer-social">
                <a href="https://discord.gg/FkEwvRW2YZ" target="_blank" aria-label="Discord"><i class="fab fa-discord"></i></a>
                <a href="https://github.com/NovaFlare-Engine-Concentration/FNF-NovaFlare-Engine/" target="_blank" aria-label="GitHub"><i class="fab fa-github"></i></a>
                <a href="https://youtube.com/@beihu235" target="_blank" aria-label="YouTube"><i class="fab fa-youtube"></i></a>
            </div>
            
            <div class="footer-copyright">
                <!--<p>&copy; 2025 NovaFlare Engine. <span>保留所有权利。</span></p>-->
            </div>
        </div>
    </footer>

    <!-- 代码高亮脚本 -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/prism/1.29.0/prism.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/prism/1.29.0/components/prism-javascript.min.js"></script>
    
    <script>
        // 侧边栏数据
        const sidebarData = [
            {
                title: "用前须知",
                icon: "fa-code",
                items: [
                    { name: "温馨提示", id: "tips" },
                    { name: "注意事项", id: "notes" }
                ]
            },
            {
                title: "代码示例",
                icon: "fa-cogs",
                items: [
                    { name: "自定义类示例", id: "custom-class" },
                    { name: "错误示例", id: "wrong-example" },
                    { name: "正确示例", id: "correct-example" }
                ]
            },
            {
                title: "高级用法",
                icon: "fa-rocket",
                items: [
                    { name: "重要提示", id: "important-notes" },
                    { name: "Array示例", id: "array-example" },
                    { name: "Map示例", id: "map-example" },
                    { name: "未完待续", id: "tbc" }
                ]
            }
        ];

        // 文档内容数据
        const contentData = {
            "tips": {
                title: "温馨提示",
                content: `
                    <div class="doc-section" id="tips">
                        <h2>温馨提示</h2>
                        <div class="function-notes">
                            <h3>温馨提示</h3>
                            <ul>
                                <li>
                                    本开发文档是面向对hscript或haxe有基础的开发者
                                </li>
                                
                                <li>
                                   如果您还不会其中的任何一项请去学习，本文档会用到许多基础用法并且不会做过多解释
                                </li>
                            </ul>
                        </div>
                        
                        <div class="doc-navigation">
                            <div></div>
                            <button class="nav-btn next" data-next="notes">
                                下一页 <i class="fas fa-arrow-right"></i>
                            </button>
                        </div>
                    </div>
                `
            },
            "notes": {
                title: "注意事项",
                content: `
                    <div class="doc-section" id="notes">
                        <h2>看我</h2>

                        <div class="function-notes">
                            <h3>注意事项</h3>
                            <ul>
                                <li>
                                    在本引擎的hscript中，为了保持与源码直接进行交互，让源码访问有继承的自定义类时，通常会指向它的父类，这或许可以保证hscript与源码的畅通性，但这也有着明显的短板：由源码的某一个类所储存的已继承自定义类再由脚本调用会直接变成他的父类，最好的例子便是Array
                                </li>
                           </ul>
                        </div>
                        
                        <div class="doc-navigation">
                            <button class="nav-btn prev" data-prev="tips">
                                <i class="fas fa-arrow-left"></i> 上一页
                            </button>
                            <button class="nav-btn next" data-next="custom-class">
                                下一页 <i class="fas fa-arrow-right"></i>
                            </button>
                        </div>
                    </div>
                `
            },
            "custom-class": {
                title: "自定义类示例",
                content: `
                    <div class="doc-section" id="custom-class">
                        <div class="function-example">
                            <h3>如果你有一个这样的自定义类</h3>
                            <div class="code-block">
                                <div class="code-header">
                                    <span>HScript</span>
                                    <button class="code-copy">复制</button>
                                </div>
                                <pre><code class="language-javascript">
package some;

class YouObject extends ScriptedSprite
{
    public function new()
    {
        super();
    }
    public function knock()
    {
        trace("who's that knocking ?");
    }
}
</code></pre>
                            </div>
                        </div>
                        
                        <div class="doc-navigation">
                            <button class="nav-btn prev" data-prev="notes">
                                <i class="fas fa-arrow-left"></i> 上一页
                            </button>
                            <button class="nav-btn next" data-next="wrong-example">
                                下一页 <i class="fas fa-arrow-right"></i>
                            </button>
                        </div>
                    </div>
                `
            },
            "wrong-example": {
                title: "错误示例",
                content: `
                    <div class="doc-section" id="wrong-example">
                        <h3>错误示例</h3>
                        <div class="code-block">
                            <div class="code-header">
                                <span>HScript</span>
                                <button class="code-copy">复制</button>
                            </div>
                            <pre><code class="language-javascript">
package blabla;

import some.YouObject;

class YouNextClass
{
    var oneArray:Array<YouObject> = [];
    public function new()
    {
        var obj = new YouObject();
        add(obj);
        obj.knock();  // who's that knocking ?
        
        oneArray.push(obj); //这个时候youObj已经被转换成了他继承的父类（ScriptedSprite），
        //以至于youObj丢失了他所拥有的所有自定义变量和函数，你无法再访问他的这些东西了
        oneArray[0].knock();   // Error: Invalid Function -> 'knock'
    }
}
</code></pre>
                        </div>
                        
                        <div class="doc-navigation">
                            <button class="nav-btn prev" data-prev="custom-class">
                                <i class="fas fa-arrow-left"></i> 上一页
                            </button>
                            <button class="nav-btn next" data-next="correct-example">
                                下一页 <i class="fas fa-arrow-right"></i>
                            </button>
                        </div>
                    </div>
                `
            },
            "correct-example": {
                title: "正确示例",
                content: `
                    <div class="doc-section" id="correct-example">
                        <div class="function-notes">
                            <h3>注意事项</h3>
                            <ul>
                                <li>
                                   如果你想要所创建的Array数组专精于储存你的自定义类提供给脚本使用，你可以在其对应储存函数（"push"）添加元数据"@:unpass_standard"（@:unpass_standard：所指定的表达式将会停止对其中自定义类的父类转换）
                                </li>
                            </ul>
                        </div>
                        
                        <div class="function-example">
                            <h3>正确示例</h3>
                            <div class="code-block">
                                <div class="code-header">
                                    <span>HScript</span>
                                    <button class="code-copy">复制</button>
                                </div>
                                <pre><code class="language-javascript">
package blabla;

import some.YouObject;

class YouNextClass
{
    var oneArray:Array<YouObject> = [];
    public function new()
    {
        var obj = new YouObject();
        add(obj);
        obj.knock();  // who's that knocking ?
        
        @:unpass_standard  //放到你需要的地方，阻止他被转换成他所继承的父类
        oneArray.push(obj);
        
        oneArray[0].knock();   // who's that knocking ?
    }
}
</code></pre>
                            </div>
                        </div>
                        
                        <div class="doc-navigation">
                            <button class="nav-btn prev" data-prev="wrong-example">
                                <i class="fas fa-arrow-left"></i> 上一页
                            </button>
                            <button class="nav-btn next" data-next="important-notes">
                                下一页 <i class="fas fa-arrow-right"></i>
                            </button>
                        </div>
                    </div>
                `
            },
            "important-notes": {
                title: "重要提示",
                content: `
                    <div class="doc-section" id="important-notes">
                        <div class="function-notes">
                            <h3>重要提示</h3>
                            <ul>
                                <li>
                                    以下例子会出现转换成父类的问题
                                </li>
                           </ul>
                        </div>
                        
                        <div class="doc-navigation">
                            <button class="nav-btn prev" data-prev="correct-example">
                                <i class="fas fa-arrow-left"></i> 上一页
                            </button>
                            <button class="nav-btn next" data-next="array-example">
                                下一页 <i class="fas fa-arrow-right"></i>
                            </button>
                        </div>
                    </div>
                `
            },
            "array-example": {
                title: "Array示例",
                content: `
                    <div class="doc-section" id="array-example">
                        <div class="function-example">
                            <h3>例子1: Array</h3>
                            <div class="code-block">
                                <div class="code-header">
                                    <span>HScript</span>
                                    <button class="code-copy">复制</button>
                                </div>
                                <pre><code class="language-javascript">
//错误写法
var obj:MyClass = new MyClass(); // MyClass extends ScriptedSprite
add(obj);
oneArray.push(obj); //存进数组的实际上是ScriptedSprite实例，他已经丢失了数据

oneArray[0].knock();   // Error: Invalid Function -> 'knock'
</code></pre>
                            </div>
                            
                            <div class="code-block">
                                <div class="code-header">
                                    <span>HScript</span>
                                    <button class="code-copy">复制</button>
                                </div>
                                <pre><code class="language-javascript">
//正确写法
var obj:MyClass = new MyClass(); // MyClass extends ScriptedSprite
add(obj);

@:unpass_standard
oneArray.push(obj);
//你也可以使用以下两种方法
/*
@:unpass_standard oneArray.push(obj);

oneArray.push(@:unpass_standard obj);
*/
oneArray[0].knock();   // who's that knocking ?
</code></pre>
                            </div>
                        </div>
                        
                        <div class="doc-navigation">
                            <button class="nav-btn prev" data-prev="important-notes">
                                <i class="fas fa-arrow-left"></i> 上一页
                            </button>
                            <button class="nav-btn next" data-next="map-example">
                                下一页 <i class="fas fa-arrow-right"></i>
                            </button>
                        </div>
                    </div>
                `
            },
            "map-example": {
                title: "Map示例",
                content: `
                    <div class="doc-section" id="map-example">
                        <div class="function-example">
                            <h3>例子2: Map</h3>
                            <div class="code-block">
                                <div class="code-header">
                                    <span>HScript</span>
                                    <button class="code-copy">复制</button>
                                </div>
                                <pre><code class="language-javascript">
//错误写法
var obj:MyClass = new MyClass(); // MyClass extends ScriptedSprite

var helpMap:Map<Int, MyClass> = new Map();

helpMap.set(1145, obj); //存进Map的实际上是ScriptedSprite实例，他已经丢失了数据

helpMap.get(1145).knock(); // Error: Invalid Function -> 'knock'
</code></pre>
                            </div>
                            
                            <div class="code-block">
                                <div class="code-header">
                                    <span>HScript</span>
                                    <button class="code-copy">复制</button>
                                </div>
                                <pre><code class="language-javascript">
//正确写法
var obj:MyClass = new MyClass(); // MyClass extends ScriptedSprite

var helpMap:Map<Int, MyClass> = new Map();

@:unpass_standard
helpMap.set(1145, obj);

//你也可以使用以下两种方法
/*
@:unpass_standard helpMap.set(1145, obj);

helpMap.set(1145, @:unpass_standard obj);
*/

helpMap.get(1145).knock();  // who's that knocking ?
</code></pre>
                            </div>
                        </div>
                        
                        <div class="doc-navigation">
                            <button class="nav-btn prev" data-prev="array-example">
                                <i class="fas fa-arrow-left"></i> 上一页
                            </button>
                            <button class="nav-btn next" data-next="tbc">
                                下一页 <i class="fas fa-arrow-right"></i>
                            </button>
                        </div>
                    </div>
                `
            },
            "tbc": {
                title: "未完待续",
                content: `
                    <div class="doc-section" id="tbc">
                        <div class="function-example">
                            <h3>未完待续</h3>
                            <div class="code-block">
                                <div class="code-header">
                                    <span>HScript</span>
                                    <button class="code-copy">复制</button>
                                </div>
                                <pre><code class="language-javascript">
目前还没发现别的什么问题
</code></pre>
                            </div>
                        </div>
                        
                        <div class="doc-navigation">
                            <button class="nav-btn prev" data-prev="map-example">
                                <i class="fas fa-arrow-left"></i> 上一页
                            </button>
                            <div></div>
                        </div>
                    </div>
                `
            }
        };

        // 初始化文档
        document.addEventListener('DOMContentLoaded', function() {
            // 生成侧边栏
            generateSidebar();
            
            // 生成文档内容
            generateContent();
            
            // 显示默认内容
            showContent('tips');
            
            // 初始化交互功能
            initInteractions();
        });

        // 生成侧边栏
        function generateSidebar() {
            const sidebar = document.querySelector('.sidebar');
            
            sidebarData.forEach(section => {
                const sectionElement = document.createElement('div');
                sectionElement.className = 'sidebar-section active';
                
                sectionElement.innerHTML = `
                    <div class="sidebar-header">
                        <span><i class="fas ${section.icon} me-2"></i> ${section.title}</span>
                        <i class="fas fa-chevron-down"></i>
                    </div>
                    <div class="sidebar-items">
                        ${section.items.map(item => 
                            `<a href="#" class="sidebar-item" data-id="${item.id}">${item.name}</a>`
                        ).join('')}
                    </div>
                `;
                
                sidebar.appendChild(sectionElement);
            });
        }

        // 生成文档内容
        function generateContent() {
            const contentElement = document.querySelector('.docs-content');
            
            // 将所有内容添加到文档中
            Object.keys(contentData).forEach(key => {
                contentElement.innerHTML += contentData[key].content;
            });
        }

        // 显示内容
        function showContent(contentId) {
            // 隐藏所有内容
            document.querySelectorAll('.doc-section').forEach(section => {
                section.classList.remove('active');
            });
            
            // 显示指定内容
            const targetSection = document.getElementById(contentId);
            if (targetSection) {
                targetSection.classList.add('active');
                
                // 更新页面标题
                document.title = `NovaFlare Engine | ${contentData[contentId].title}`;
                
                // 高亮当前菜单项
                document.querySelectorAll('.sidebar-item').forEach(item => {
                    item.classList.remove('active');
                    if (item.getAttribute('data-id') === contentId) {
                        item.classList.add('active');
                    }
                });
                
                // 滚动到顶部
                window.scrollTo(0, 0);
            }
        }

        // 初始化交互功能
        function initInteractions() {
            // 侧边栏展开/折叠
            const sidebarHeaders = document.querySelectorAll('.sidebar-header');
            
            sidebarHeaders.forEach(header => {
                header.addEventListener('click', function() {
                    const section = this.parentElement;
                    section.classList.toggle('active');
                    this.querySelector('i:last-child').classList.toggle('fa-chevron-down');
                    this.querySelector('i:last-child').classList.toggle('fa-chevron-right');
                });
            });
            
            // 侧边栏项点击
            const sidebarItems = document.querySelectorAll('.sidebar-item');
            
            sidebarItems.forEach(item => {
                item.addEventListener('click', function(e) {
                    e.preventDefault();
                    const contentId = this.getAttribute('data-id');
                    showContent(contentId);
                });
            });
            
            // 导航按钮点击
            document.addEventListener('click', function(e) {
                if (e.target.closest('.nav-btn.next')) {
                    const nextId = e.target.closest('.nav-btn.next').getAttribute('data-next');
                    showContent(nextId);
                } else if (e.target.closest('.nav-btn.prev')) {
                    const prevId = e.target.closest('.nav-btn.prev').getAttribute('data-prev');
                    showContent(prevId);
                }
            });
            
            // 代码复制功能
            initCodeCopy();
        }

        // 初始化代码复制功能
        function initCodeCopy() {
            const copyButtons = document.querySelectorAll('.code-copy');
            
            copyButtons.forEach(button => {
                button.addEventListener('click', function() {
                    const codeBlock = this.closest('.code-block').querySelector('code');
                    const textArea = document.createElement('textarea');
                    textArea.value = codeBlock.textContent;
                    document.body.appendChild(textArea);
                    textArea.select();
                    document.execCommand('copy');
                    document.body.removeChild(textArea);
                    
                    // 显示复制成功提示
                    const originalText = this.textContent;
                    this.textContent = '已复制!';
                    setTimeout(() => {
                        this.textContent = originalText;
                    }, 2000);
                });
            });
        }
    </script>
    
    <script src="../../../js/starfield.js"></script>
    <script src="../../../js/theme.js"></script>
</body>
</html>